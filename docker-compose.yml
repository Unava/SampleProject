version: '3.8'
secrets:
  postgres_user:
      file: ./.docker/secrets/postgres_user
  postgres_password:
      file: ./.docker/secrets/postgres_password
services:
  postgres:
    container_name: db-postgresql.sample.project
    image: postgres:11.13-alpine
    restart: unless-stopped
    networks:
      testNetwork:
        ipv4_address: 44.44.44.2
    build: ./.docker/postgres
    ports:
        - 2346:5432
    secrets:
        - postgres_user
        - postgres_password
    env_file: ./.docker/postgres/postgres.env
    volumes:
        - ./.docker/postgres/pgsqldata:/var/lib/postgresql/data:delegated
  rabbitmq:
    container_name: rabbitmq.sample.project
    image: rabbitmq:3.11.10-management
    networks:
      testNetwork:
        ipv4_address: 44.44.44.3
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./.docker/rabbitmq/data:/var/lib/rabbitmq
      - ./.docker/rabbitmq/logs:/var/log/rabbitmq
  sampleproject:
     container_name: sample.project
     image: sampleprojectimage
     networks:
        testNetwork:
          ipv4_address: 44.44.44.4
     restart: unless-stopped
     ports:
         - 8080:8080
     environment:
       - JDBC_URL=jdbc:postgresql://44.44.44.2:5432/sample
       - JDBC_USERNAME=postgresuser
       - JDBC_PASSWORD=password
       - PORT=8080
       - RABBITMQ_URL=44.44.44.3
       - RABBITMQ_USERNAME=guest
       - RABBITMQ_PASSWORD=guest
     depends_on:
       - postgres
       - rabbitmq
networks:
  testNetwork:
    ipam:
      driver: default
      config:
        - subnet: 44.44.44.0/16
          gateway: 44.44.44.1